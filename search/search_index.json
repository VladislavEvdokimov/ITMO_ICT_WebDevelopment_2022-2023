{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162. \u0415\u0432\u0434\u043e\u043a\u0438\u043c\u043e\u0432 \u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432 \u041a33421 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0412\u0410\u0420\u0418\u0410\u041d\u0422 4: \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0444\u0438\u0440\u043c\u044b \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: 1) \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. 2) \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. 3) \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. 4) \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. 5) \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c. \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u0438\u0434\u0435\u043e\u043e\u0442\u0447\u0451\u0442 \u0424\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430: models.py from django.db import models from django.contrib.auth import get_user_model from django.contrib.auth.models import AbstractUser class User(AbstractUser): username = models.CharField(\"username\", max_length=150, unique=True) password = models.CharField(max_length=30, null=False) passport_data = models.CharField(max_length=30, null=False) email = models.EmailField(\"email address\", unique=True) tour = models.ManyToManyField(\"self\", through=\"Reservation\") phone_number = models.IntegerField(null=True) class Tour(models.Model): payment_by = [('\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u0435', '\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u0435'), ('\u041e\u043d\u043b\u0430\u0439\u043d \u043e\u043f\u043b\u0430\u0442\u0430', '\u041e\u043d\u043b\u0430\u0439\u043d \u043e\u043f\u043b\u0430\u0442\u0430')] naming = models.CharField(max_length=50, null=False) country = models.CharField(max_length=30, null=False) city = models.CharField(max_length=30, null=False) description = models.CharField(max_length=2000, null=False) paid_with = models.CharField(max_length=13, choices=payment_by) start_date = models.DateField() end_date = models.DateField() class Feedback(models.Model): User = get_user_model() rating = [(1, '1'), (2, '2'), (3, '3'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')] username = models.ForeignKey('User', on_delete=models.CASCADE) comment = models.CharField(max_length=5000) tour = models.ForeignKey(\"Tour\", on_delete=models.CASCADE) user_rating = models.IntegerField(choices=rating) date_of_publication = models.DateField() start_date = models.DateField() end_date = models.DateField() class Reservation(models.Model): User = get_user_model() username = models.ForeignKey('User', on_delete=models.CASCADE) tour = models.ForeignKey('Tour', on_delete=models.CASCADE) start_date = models.DateField(null=True) end_date = models.DateField(null=True) status = models.BooleanField(null=True) forms.py from django import forms from django.contrib.auth.forms import UserCreationForm from .models import * class RegistrationForm(UserCreationForm): class Meta: model = User fields = ['username', 'password1', 'password2', 'email', 'passport_data', 'phone_number'] class LoginForm(forms.ModelForm): class Meta: model = User fields = ['username', 'password'] class CreateCommentForm(forms.ModelForm): class Meta: model = Feedback fields = ('username', 'start_date', 'tour', 'end_date', 'user_rating', 'comment', 'date_of_publication') def __init__(self, *args, **kwargs): super(CreateCommentForm, self).__init__(*args, **kwargs) self.fields['username'].disabled = True class CreateReservationForm(forms.ModelForm): class Meta: model = Reservation fields = ('username', 'tour', 'start_date', 'end_date') def __init__(self, *args, **kwargs): super(CreateReservationForm, self).__init__(*args, **kwargs) self.fields['username'].disabled = True self.fields['tour'].disabled = True views.py from django.http import HttpResponse from django.shortcuts import render, redirect, get_object_or_404 from django.views.generic import CreateView, ListView, UpdateView, DeleteView from .forms import * from .models import * from django.contrib.auth import authenticate, login, logout def homepage(request): return render(request, 'main.html') def profile(request): return render(request, 'profile.html') def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() username = form.cleaned_data['username'] password = form.cleaned_data['password1'] user = authenticate(username=username, password=password) login(request, user) return redirect('/profile') else: form = RegistrationForm() visual = {'form': form} return render(request, 'registration/signin.html', visual) def user_login(request): global form if request.method == \"POST\": username = request.POST['username'] password = request.POST['password'] user = authenticate(request, username=username, password=password) if user is not None: if user.is_active: login(request, user) return redirect('/main') else: return HttpResponse('\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c!') else: form = LoginForm() return render(request, 'registration/login.html', {'form': form}) def log_out(request): logout(request) return redirect('/main') class CreateReservation(CreateView): form_class = CreateReservationForm model = Reservation template_name = 'reservation.html' context_object_name = 'reservation' success_url = '/profile' def get_initial(self): initial = super(CreateReservation, self).get_initial() initial = initial.copy() initial['username'] = self.request.user.pk initial['tour'] = get_object_or_404(Tour, pk=self.kwargs['pk']) return initial class UpdateReserveView(UpdateView): model = Reservation fields = ['start_date', 'end_date'] template_name = 'upreservation.html' context_object_name = 'reservation' success_url = '/profile' class DeleteReserveView(DeleteView): model = Reservation template_name = 'delreservation.html' context_object_name = 'reservation' success_url = '/profile' def reservedtourlist(request): visual = {\"reservations\": Reservation.objects.all()} return render(request, 'reservedtour.html', visual) class listreservations(ListView): template_name = 'profilereservations.html' context_object_name = 'reservation_list' def get_queryset(self): self.user = self.request.user.pk return Reservation.objects.filter(username=self.user) def commentlist(request): visual = {\"comments\": Feedback.objects.all()} return render(request, 'comments.html', visual) def tourlist(request): visual = {\"tours\": Tour.objects.all()} return render(request, 'tours.html', visual) class CreateComment(CreateView): form_class = CreateCommentForm model = Feedback template_name = 'comment.html' context_object_name = 'comment' success_url = '/comments' def get_initial(self): initial = super(CreateComment, self).get_initial() initial = initial.copy() initial['username'] = self.request.user.pk return initial urls.py from django.urls import path from . import views from .views import * urlpatterns = [ path('main/', views.homepage), path('profile/', views.profile), path('login/', views.user_login, name='login'), path('register/', register, name='register'), path('logout/', views.log_out), path('reservedtour/', views.reservedtourlist), path('comments/', views.commentlist), path('createcomment/', CreateComment.as_view()), path('tours/', views.tourlist), path('tours/<int:pk>/reservation', CreateReservation.as_view(), name='reservation'), path('profilereservations/', listreservations.as_view(), name='reservations'), path('profilereservations/deletereservation/<int:pk>/', views.DeleteReserveView.as_view()), path('profilereservations/updatereservation/<int:pk>/', views.UpdateReserveView.as_view()) ]","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162. \u0415\u0432\u0434\u043e\u043a\u0438\u043c\u043e\u0432 \u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432 \u041a33421"},{"location":"#no2-33421","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162. \u0415\u0432\u0434\u043e\u043a\u0438\u043c\u043e\u0432 \u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432 \u041a33421"},{"location":"#_1","text":"\u0412\u0410\u0420\u0418\u0410\u041d\u0422 4: \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0444\u0438\u0440\u043c\u044b \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: 1) \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. 2) \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. 3) \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. 4) \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. 5) \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"#_2","text":"","title":"\u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0432\u0438\u0434\u0435\u043e\u043e\u0442\u0447\u0451\u0442"},{"location":"#_3","text":"models.py from django.db import models from django.contrib.auth import get_user_model from django.contrib.auth.models import AbstractUser class User(AbstractUser): username = models.CharField(\"username\", max_length=150, unique=True) password = models.CharField(max_length=30, null=False) passport_data = models.CharField(max_length=30, null=False) email = models.EmailField(\"email address\", unique=True) tour = models.ManyToManyField(\"self\", through=\"Reservation\") phone_number = models.IntegerField(null=True) class Tour(models.Model): payment_by = [('\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u0435', '\u041d\u0430\u043b\u0438\u0447\u043d\u044b\u0435'), ('\u041e\u043d\u043b\u0430\u0439\u043d \u043e\u043f\u043b\u0430\u0442\u0430', '\u041e\u043d\u043b\u0430\u0439\u043d \u043e\u043f\u043b\u0430\u0442\u0430')] naming = models.CharField(max_length=50, null=False) country = models.CharField(max_length=30, null=False) city = models.CharField(max_length=30, null=False) description = models.CharField(max_length=2000, null=False) paid_with = models.CharField(max_length=13, choices=payment_by) start_date = models.DateField() end_date = models.DateField() class Feedback(models.Model): User = get_user_model() rating = [(1, '1'), (2, '2'), (3, '3'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')] username = models.ForeignKey('User', on_delete=models.CASCADE) comment = models.CharField(max_length=5000) tour = models.ForeignKey(\"Tour\", on_delete=models.CASCADE) user_rating = models.IntegerField(choices=rating) date_of_publication = models.DateField() start_date = models.DateField() end_date = models.DateField() class Reservation(models.Model): User = get_user_model() username = models.ForeignKey('User', on_delete=models.CASCADE) tour = models.ForeignKey('Tour', on_delete=models.CASCADE) start_date = models.DateField(null=True) end_date = models.DateField(null=True) status = models.BooleanField(null=True) forms.py from django import forms from django.contrib.auth.forms import UserCreationForm from .models import * class RegistrationForm(UserCreationForm): class Meta: model = User fields = ['username', 'password1', 'password2', 'email', 'passport_data', 'phone_number'] class LoginForm(forms.ModelForm): class Meta: model = User fields = ['username', 'password'] class CreateCommentForm(forms.ModelForm): class Meta: model = Feedback fields = ('username', 'start_date', 'tour', 'end_date', 'user_rating', 'comment', 'date_of_publication') def __init__(self, *args, **kwargs): super(CreateCommentForm, self).__init__(*args, **kwargs) self.fields['username'].disabled = True class CreateReservationForm(forms.ModelForm): class Meta: model = Reservation fields = ('username', 'tour', 'start_date', 'end_date') def __init__(self, *args, **kwargs): super(CreateReservationForm, self).__init__(*args, **kwargs) self.fields['username'].disabled = True self.fields['tour'].disabled = True views.py from django.http import HttpResponse from django.shortcuts import render, redirect, get_object_or_404 from django.views.generic import CreateView, ListView, UpdateView, DeleteView from .forms import * from .models import * from django.contrib.auth import authenticate, login, logout def homepage(request): return render(request, 'main.html') def profile(request): return render(request, 'profile.html') def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() username = form.cleaned_data['username'] password = form.cleaned_data['password1'] user = authenticate(username=username, password=password) login(request, user) return redirect('/profile') else: form = RegistrationForm() visual = {'form': form} return render(request, 'registration/signin.html', visual) def user_login(request): global form if request.method == \"POST\": username = request.POST['username'] password = request.POST['password'] user = authenticate(request, username=username, password=password) if user is not None: if user.is_active: login(request, user) return redirect('/main') else: return HttpResponse('\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c!') else: form = LoginForm() return render(request, 'registration/login.html', {'form': form}) def log_out(request): logout(request) return redirect('/main') class CreateReservation(CreateView): form_class = CreateReservationForm model = Reservation template_name = 'reservation.html' context_object_name = 'reservation' success_url = '/profile' def get_initial(self): initial = super(CreateReservation, self).get_initial() initial = initial.copy() initial['username'] = self.request.user.pk initial['tour'] = get_object_or_404(Tour, pk=self.kwargs['pk']) return initial class UpdateReserveView(UpdateView): model = Reservation fields = ['start_date', 'end_date'] template_name = 'upreservation.html' context_object_name = 'reservation' success_url = '/profile' class DeleteReserveView(DeleteView): model = Reservation template_name = 'delreservation.html' context_object_name = 'reservation' success_url = '/profile' def reservedtourlist(request): visual = {\"reservations\": Reservation.objects.all()} return render(request, 'reservedtour.html', visual) class listreservations(ListView): template_name = 'profilereservations.html' context_object_name = 'reservation_list' def get_queryset(self): self.user = self.request.user.pk return Reservation.objects.filter(username=self.user) def commentlist(request): visual = {\"comments\": Feedback.objects.all()} return render(request, 'comments.html', visual) def tourlist(request): visual = {\"tours\": Tour.objects.all()} return render(request, 'tours.html', visual) class CreateComment(CreateView): form_class = CreateCommentForm model = Feedback template_name = 'comment.html' context_object_name = 'comment' success_url = '/comments' def get_initial(self): initial = super(CreateComment, self).get_initial() initial = initial.copy() initial['username'] = self.request.user.pk return initial urls.py from django.urls import path from . import views from .views import * urlpatterns = [ path('main/', views.homepage), path('profile/', views.profile), path('login/', views.user_login, name='login'), path('register/', register, name='register'), path('logout/', views.log_out), path('reservedtour/', views.reservedtourlist), path('comments/', views.commentlist), path('createcomment/', CreateComment.as_view()), path('tours/', views.tourlist), path('tours/<int:pk>/reservation', CreateReservation.as_view(), name='reservation'), path('profilereservations/', listreservations.as_view(), name='reservations'), path('profilereservations/deletereservation/<int:pk>/', views.DeleteReserveView.as_view()), path('profilereservations/updatereservation/<int:pk>/', views.UpdateReserveView.as_view()) ]","title":"\u0424\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430:"}]}